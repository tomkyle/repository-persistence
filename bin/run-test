#!/usr/bin/env php
<?php

/**
 * A script to automatically find and execute unit tests for a given PHP source file.
 * Utilizes Symfony Console and Finder components to achieve this functionality.
 */

use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Finder\Finder;


// Environment
$root_path = dirname(__DIR__);
require $root_path . '/vendor/autoload.php';


// Silly Application with commands as follows:
//
// - Determine and run matching PhpUnit test
//
$app = new Silly\Application();

$app->command('unit [file]', function ($file, OutputInterface $output) use ($root_path) {

    // Construct the expected name of the test file
    $file_basename = pathinfo($file, PATHINFO_FILENAME);
    $test_file = $file_basename . 'Test';

    // Use Finder to search for the test file in the tests directory.
    $finder = (new Finder())
              ->in($root_path . '/tests')
              ->files()
              ->name($test_file . '.php');

    // If no test file is found, inform the user.
    if (iterator_count($finder) < 1) {
        $output->writeln("<comment>Has no Unit test: $file</comment>");
    }

    // If a test file is found, execute it using the specified PHPUnit command.
    foreach ($finder as $file) {
        $cmd = sprintf("npm run phpunit:filter %s", $test_file);
        echo passthru($cmd);
    }

})->descriptions('Find and run Unit test for a source file', [
    'file' => 'The PHP class file to test',
]);

$app->run();
